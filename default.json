{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "description": "Default preset for use with Parca's repos",
  "extends": [
    "config:base",
    ":automergeDigest",
    ":automergeMinor",
    ":enablePreCommit",
    ":maintainLockFilesWeekly",
    ":rebaseStalePrs",
    ":semanticCommits",
    ":semanticCommitScope(deps)",
    "docker:pinDigests",
    "helpers:pinGitHubActionDigests",
    "regexManagers:dockerfileVersions"
  ],
  "reviewersFromCodeOwners": true,
  "internalChecksFilter": "strict",
  "platformAutomerge": true,
  "golang": {
    "postUpdateOptions": [
      "gomodTidy",
      "gomodUpdateImportPaths"
    ]
  },
  "packageRules": [
    {
      "description": "Require dashboard approval for major updates",
      "matchUpdateTypes": ["major"],
      "dependencyDashboardApproval": true
    },
    {
      "description": "One week stability period for Go, npm, and Rust packages",
      "matchDatasources": ["go", "npm", "crate"],
      "stabilityDays": 7
    },
    {
      "description": "One week stability period for pre-commit packages",
      "matchManagers": ["pre-commit"],
      "stabilityDays": 7
    },
    {
      "description": "Update Go module digests weekly as they tend to update too often",
      "matchDatasources": ["go"],
      "matchUpdateTypes": ["digest"],
      "extends": ["schedule:weekly"]
    },
    {
      "description": "Opt-out minimum Go version updates: https://github.com/renovatebot/renovate/issues/16715",
      "matchManagers": ["gomod"],
      "matchDepTypes": ["golang"],
      "enabled": false
    },
    {
      "description": "Prefix lockFileMaintenance branches",
      "matchUpdateTypes": ["lockFileMaintenance"],
      "additionalBranchPrefix": "{{manager}}-",
      "commitMessagePrefix": "{{semanticPrefix}} {{manager}}"
    },
    {
      "description": "Group golang docker tags and rename to Golang",
      "matchDatasources": ["docker"],
      "matchPackageNames": ["golang"],
      "matchPackagePatterns": ["/golang$"],
      "commitMessageTopic": "Golang",
      "groupName": "golang"
    },
    {
      "description": "Customize rust updates commit message",
      "matchPackageNames": ["rust"],
      "commitMessageTopic": "Rust"
    },
    {
      "description": "Group packages from Kubernetes together",
      "matchSourceUrlPrefixes": ["https://github.com/kubernetes/"],
      "matchUpdateTypes": ["patch", "minor", "major"],
      "groupName": "kubernetes"
    },
    {
      "description": "Group golangci-lint packages",
      "matchSourceUrls": ["https://github.com/golangci/golangci-lint"],
      "groupName": "golangci-lint"
    },
    {
      "description": "Group go-jsonnet packages",
      "matchSourceUrls": ["https://github.com/google/go-jsonnet"],
      "groupName": "go-jsonnet"
    },
    {
      "description": "Exclude retracted Kubernetes client versions: https://github.com/renovatebot/renovate/issues/13012",
      "matchPackageNames": ["k8s.io/client-go"],
      "allowedVersions": "!/1\\.(4\\.0|5\\.0|5\\.1|5\\.2)$/"
    },
    {
      "description": "Exclude retracted Prometheus versions: https://github.com/renovatebot/renovate/issues/13012",
      "matchPackageNames": ["github.com/prometheus/prometheus"],
      "allowedVersions": "<1"
    },
    {
      "matchDepTypes": ["dependencies", "require"],
      "semanticCommitType": "build"
    },
    {
      "matchPackageNames": ["golang", "node", "rust"],
      "matchUpdateTypes": ["patch", "minor", "major"],
      "semanticCommitType": "build"
    },
    {
      "matchFiles": ["Dockerfile"],
      "semanticCommitType": "build"
    }
  ],
  "regexManagers": [
    {
      "description": "Update _VERSION variables in GitHub workflows",
      "fileMatch": ["^\\.github\\/workflows\\/[^/]+\\.ya?ml$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: (?:packageName)=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?(?: extractVersion=(?<extractVersion>.+?))?\\s*[A-Z_]+?_VERSION: ('|\")?(?<currentValue>.+?)('|\")?\\s"
      ]
    },
    {
      "description": "Update _VERSION variables in Makefiles",
      "fileMatch": ["(^|/)Makefile$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: (?:packageName)=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?(?: extractVersion=(?<extractVersion>.+?))?\\s[A-Z_]+?_VERSION .?= (?<currentValue>.+?)\\s"
      ]
    },
    {
      "description": "Update _VERSION variables in shell scripts",
      "fileMatch": ["\\.sh$"],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.+?) depName=(?<depName>.+?)(?: (?:packageName)=(?<packageName>.+?))?(?: versioning=(?<versioning>.+?))?(?: extractVersion=(?<extractVersion>.+?))?\\s[A-Z_]+?_VERSION=('|\")?(?<currentValue>.+?)('|\")?\\s"
      ]
    },
    {
      "description": "Update Golang in .go-version file",
      "fileMatch": ["(^|/)\\.go-version$"],
      "matchStrings": ["^\\s*(?<currentValue>.+?)\\s*$"],
      "depNameTemplate": "golang",
      "datasourceTemplate": "docker"
    },
    {
      "description": "Update Rust stable version in rust-toolchain.toml",
      "fileMatch": ["(^|/)rust-toolchain\\.toml$"],
      "matchStrings": ["channel\\s*=\\s*('|\")(?<currentValue>.+?)('|\")\\s"],
      "depNameTemplate": "rust",
      "packageNameTemplate": "rust-lang/rust",
      "datasourceTemplate": "github-releases"
    }
  ]
}
